/* ----------------------------------------------------------------------------------------------------------------------
* © Copyright 2018 Visa. All Rights Reserved.
*
* NOTICE: The software and accompanying information and documentation (together, the “Software”) remain the property of
* and are proprietary to Visa and its suppliers and affiliates. The Software remains protected by intellectual property
* rights and may be covered by U.S. and foreign patents or patent applications. The Software is licensed and not sold.
*
* By accessing the Software you are agreeing to Visa's terms of use (developer.visa.com/terms) and privacy policy
* (developer.visa.com/privacy). In addition, all permissible uses of the Software must be in support of Visa products,
* programs and services provided through the Visa Developer Program (VDP) platform only (developer.visa.com).
* THE SOFTWARE AND ANY ASSOCIATED INFORMATION OR DOCUMENTATION IS PROVIDED ON AN “AS IS,” “AS AVAILABLE,” “WITH ALL
* FAULTS” BASIS WITHOUT WARRANTY OR CONDITION OF ANY KIND. YOUR USE IS AT YOUR OWN RISK.
---------------------------------------------------------------------------------------------------------------------- */

/*
 * Merchant Benchmark API
 * Deliver Visa’s data insights and other key analytics to our clients through the Visa Developer Platform
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.visa.developer.sample.merchant_benchmark_api.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.swagger.annotations.ApiModelProperty;

import java.util.List;
import java.util.Objects;

/**
 * RequestData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2018-12-19T10:48:57.711+05:30[Asia/Kolkata]")
public class RequestData {

  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("groupList")
  private List<String> groupList = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("msaList")
  private List<String> msaList = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("merchantCategoryCodeList")
  private List<String> merchantCategoryCodeList = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("posEntryModeList")
  private List<String> posEntryModeList = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("postalCodeList")
  private List<String> postalCodeList = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("countrySubdivisionList")
  private List<String> countrySubdivisionList = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("cardPresentIndicator")
  private String cardPresentIndicator = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("accountFundingSourceList")
  private List<String> accountFundingSourceList = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("eciIndicatorList")
  private List<String> eciIndicatorList = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("merchantCategoryGroupsCodeList")
  private List<String> merchantCategoryGroupsCodeList = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("monthList")
  private List<String> monthList = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("platformIDList")
  private List<String> platformIDList = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("merchantCountry")
  private String merchantCountry = null;

  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("naicsCodeList")
  private List<String> naicsCodeList = null;
  
  public RequestData groupList(List<String> groupList) {
    this.groupList = groupList;
    return this;
  }

  
  /**
  * Groups for which the end user is registered to the API. Example- Standard/Cardholder/cbreasoncode
  * @return groupList
  **/
  @ApiModelProperty(required = true, value = "Groups for which the end user is registered to the API. Example- Standard/Cardholder/cbreasoncode")
  public List<String> getGroupList() {
    return groupList;
  }
  public void setGroupList(List<String> groupList) {
    this.groupList = groupList;
  }
  
  public RequestData msaList(List<String> msaList) {
    this.msaList = msaList;
    return this;
  }

  
  /**
  * Valid Metropolitan Statistical Area in US
  * @return msaList
  **/
  @ApiModelProperty(required = true, value = "Valid Metropolitan Statistical Area in US")
  public List<String> getMsaList() {
    return msaList;
  }
  public void setMsaList(List<String> msaList) {
    this.msaList = msaList;
  }
  
  public RequestData merchantCategoryCodeList(List<String> merchantCategoryCodeList) {
    this.merchantCategoryCodeList = merchantCategoryCodeList;
    return this;
  }

  
  /**
  * Any valid merchant category code.
  * @return merchantCategoryCodeList
  **/
  @ApiModelProperty(required = true, value = "Any valid merchant category code.")
  public List<String> getMerchantCategoryCodeList() {
    return merchantCategoryCodeList;
  }
  public void setMerchantCategoryCodeList(List<String> merchantCategoryCodeList) {
    this.merchantCategoryCodeList = merchantCategoryCodeList;
  }
  
  public RequestData posEntryModeList(List<String> posEntryModeList) {
    this.posEntryModeList = posEntryModeList;
    return this;
  }

  
  /**
  * Valid Point of Sale Entry Mode
  * @return posEntryModeList
  **/
  @ApiModelProperty(required = true, value = "Valid Point of Sale Entry Mode")
  public List<String> getPosEntryModeList() {
    return posEntryModeList;
  }
  public void setPosEntryModeList(List<String> posEntryModeList) {
    this.posEntryModeList = posEntryModeList;
  }
  
  public RequestData postalCodeList(List<String> postalCodeList) {
    this.postalCodeList = postalCodeList;
    return this;
  }

  
  /**
  * Valid Postal Code in the United States
  * @return postalCodeList
  **/
  @ApiModelProperty(required = true, value = "Valid Postal Code in the United States")
  public List<String> getPostalCodeList() {
    return postalCodeList;
  }
  public void setPostalCodeList(List<String> postalCodeList) {
    this.postalCodeList = postalCodeList;
  }
  
  public RequestData countrySubdivisionList(List<String> countrySubdivisionList) {
    this.countrySubdivisionList = countrySubdivisionList;
    return this;
  }

  
  /**
  * Valid Country Sub Division List
  * @return countrySubdivisionList
  **/
  @ApiModelProperty(required = true, value = "Valid Country Sub Division List")
  public List<String> getCountrySubdivisionList() {
    return countrySubdivisionList;
  }
  public void setCountrySubdivisionList(List<String> countrySubdivisionList) {
    this.countrySubdivisionList = countrySubdivisionList;
  }
  
  public RequestData cardPresentIndicator(String cardPresentIndicator) {
    this.cardPresentIndicator = cardPresentIndicator;
    return this;
  }

  
  /**
  * To differentiatiate between online and in store transactions.Example- CARDPRESENT/CARDNOTPRESENT/ALL
  * @return cardPresentIndicator
  **/
  @ApiModelProperty(required = true, value = "To differentiatiate between online and in store transactions.Example- CARDPRESENT/CARDNOTPRESENT/ALL")
  public String getCardPresentIndicator() {
    return cardPresentIndicator;
  }
  public void setCardPresentIndicator(String cardPresentIndicator) {
    this.cardPresentIndicator = cardPresentIndicator;
  }
  
  public RequestData accountFundingSourceList(List<String> accountFundingSourceList) {
    this.accountFundingSourceList = accountFundingSourceList;
    return this;
  }

  
  /**
  * Type of Funding Source transactions.
  * @return accountFundingSourceList
  **/
  @ApiModelProperty(required = true, value = "Type of Funding Source transactions.")
  public List<String> getAccountFundingSourceList() {
    return accountFundingSourceList;
  }
  public void setAccountFundingSourceList(List<String> accountFundingSourceList) {
    this.accountFundingSourceList = accountFundingSourceList;
  }
  
  public RequestData eciIndicatorList(List<String> eciIndicatorList) {
    this.eciIndicatorList = eciIndicatorList;
    return this;
  }

  
  /**
  * Valid ECI Indicator.
  * @return eciIndicatorList
  **/
  @ApiModelProperty(required = true, value = "Valid ECI Indicator.")
  public List<String> getEciIndicatorList() {
    return eciIndicatorList;
  }
  public void setEciIndicatorList(List<String> eciIndicatorList) {
    this.eciIndicatorList = eciIndicatorList;
  }
  
  public RequestData merchantCategoryGroupsCodeList(List<String> merchantCategoryGroupsCodeList) {
    this.merchantCategoryGroupsCodeList = merchantCategoryGroupsCodeList;
    return this;
  }

  
  /**
  * Any valid merchant category group codes.
  * @return merchantCategoryGroupsCodeList
  **/
  @ApiModelProperty(required = true, value = "Any valid merchant category group codes.")
  public List<String> getMerchantCategoryGroupsCodeList() {
    return merchantCategoryGroupsCodeList;
  }
  public void setMerchantCategoryGroupsCodeList(List<String> merchantCategoryGroupsCodeList) {
    this.merchantCategoryGroupsCodeList = merchantCategoryGroupsCodeList;
  }
  
  public RequestData monthList(List<String> monthList) {
    this.monthList = monthList;
    return this;
  }

  
  /**
  * Valid Months. Ex: 201601 for Jan 2016
  * @return monthList
  **/
  @ApiModelProperty(required = true, value = "Valid Months. Ex: 201601 for Jan 2016")
  public List<String> getMonthList() {
    return monthList;
  }
  public void setMonthList(List<String> monthList) {
    this.monthList = monthList;
  }
  
  public RequestData platformIDList(List<String> platformIDList) {
    this.platformIDList = platformIDList;
    return this;
  }

  
  /**
  * Valid Product Platform
  * @return platformIDList
  **/
  @ApiModelProperty(required = true, value = "Valid Product Platform")
  public List<String> getPlatformIDList() {
    return platformIDList;
  }
  public void setPlatformIDList(List<String> platformIDList) {
    this.platformIDList = platformIDList;
  }
  
  public RequestData merchantCountry(String merchantCountry) {
    this.merchantCountry = merchantCountry;
    return this;
  }

  
  /**
  * Valid Merchant Country. Current API supports US only
  * @return merchantCountry
  **/
  @ApiModelProperty(required = true, value = "Valid Merchant Country. Current API supports US only")
  public String getMerchantCountry() {
    return merchantCountry;
  }
  public void setMerchantCountry(String merchantCountry) {
    this.merchantCountry = merchantCountry;
  }


  public RequestData naicsCodeList(List<String> naicsCodeList) {
    this.naicsCodeList = naicsCodeList;
    return this;
  }

  @ApiModelProperty(required = true, value = "Valid Merchant Country. Current API supports US only")
  public List<String> getNaicsCodeList() {
    return naicsCodeList;
  }

  public void setNaicsCodeList(List<String> naicsCodeList) {
    this.naicsCodeList = naicsCodeList;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestData requestData = (RequestData) o;
    return Objects.equals(this.groupList, requestData.groupList) &&
        Objects.equals(this.msaList, requestData.msaList) &&
        Objects.equals(this.merchantCategoryCodeList, requestData.merchantCategoryCodeList) &&
        Objects.equals(this.posEntryModeList, requestData.posEntryModeList) &&
        Objects.equals(this.postalCodeList, requestData.postalCodeList) &&
        Objects.equals(this.countrySubdivisionList, requestData.countrySubdivisionList) &&
        Objects.equals(this.cardPresentIndicator, requestData.cardPresentIndicator) &&
        Objects.equals(this.accountFundingSourceList, requestData.accountFundingSourceList) &&
        Objects.equals(this.eciIndicatorList, requestData.eciIndicatorList) &&
        Objects.equals(this.merchantCategoryGroupsCodeList, requestData.merchantCategoryGroupsCodeList) &&
        Objects.equals(this.monthList, requestData.monthList) &&
        Objects.equals(this.platformIDList, requestData.platformIDList) &&
        Objects.equals(this.merchantCountry, requestData.merchantCountry);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupList, msaList, merchantCategoryCodeList, posEntryModeList, postalCodeList, countrySubdivisionList, cardPresentIndicator, accountFundingSourceList, eciIndicatorList, merchantCategoryGroupsCodeList, monthList, platformIDList, merchantCountry);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestData {\n");

    sb.append("    groupList: ").append(toIndentedString(groupList)).append("\n");
    sb.append("    msaList: ").append(toIndentedString(msaList)).append("\n");
    sb.append("    merchantCategoryCodeList: ").append(toIndentedString(merchantCategoryCodeList)).append("\n");
    sb.append("    posEntryModeList: ").append(toIndentedString(posEntryModeList)).append("\n");
    sb.append("    postalCodeList: ").append(toIndentedString(postalCodeList)).append("\n");
    sb.append("    countrySubdivisionList: ").append(toIndentedString(countrySubdivisionList)).append("\n");
    sb.append("    cardPresentIndicator: ").append(toIndentedString(cardPresentIndicator)).append("\n");
    sb.append("    accountFundingSourceList: ").append(toIndentedString(accountFundingSourceList)).append("\n");
    sb.append("    eciIndicatorList: ").append(toIndentedString(eciIndicatorList)).append("\n");
    sb.append("    merchantCategoryGroupsCodeList: ").append(toIndentedString(merchantCategoryGroupsCodeList)).append("\n");
    sb.append("    monthList: ").append(toIndentedString(monthList)).append("\n");
    sb.append("    platformIDList: ").append(toIndentedString(platformIDList)).append("\n");
    sb.append("    merchantCountry: ").append(toIndentedString(merchantCountry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



