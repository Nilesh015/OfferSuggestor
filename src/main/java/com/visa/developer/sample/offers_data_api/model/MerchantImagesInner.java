/* ----------------------------------------------------------------------------------------------------------------------
* © Copyright 2018 Visa. All Rights Reserved.
*
* NOTICE: The software and accompanying information and documentation (together, the “Software”) remain the property of
* and are proprietary to Visa and its suppliers and affiliates. The Software remains protected by intellectual property
* rights and may be covered by U.S. and foreign patents or patent applications. The Software is licensed and not sold.
*
* By accessing the Software you are agreeing to Visa's terms of use (developer.visa.com/terms) and privacy policy
* (developer.visa.com/privacy). In addition, all permissible uses of the Software must be in support of Visa products,
* programs and services provided through the Visa Developer Program (VDP) platform only (developer.visa.com).
* THE SOFTWARE AND ANY ASSOCIATED INFORMATION OR DOCUMENTATION IS PROVIDED ON AN “AS IS,” “AS AVAILABLE,” “WITH ALL
* FAULTS” BASIS WITHOUT WARRANTY OR CONDITION OF ANY KIND. YOUR USE IS AT YOUR OWN RISK.
---------------------------------------------------------------------------------------------------------------------- */

/*
 * Offers Data API
 * The Offers Data API provides developers a quick and easy way to retrieve offer information from VMORC. The API allows you to retrieve all your available offers or retrieve specific offers. In an offer-specific request, you may choose to filter your accessible offers by certain offer attributes or you may request for offers by its identifiers.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.visa.developer.sample.offers_data_api.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.swagger.annotations.ApiModelProperty;

import java.util.List;
import java.util.Objects;

/**
 * MerchantImagesInner
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2018-12-19T10:49:33.222+05:30[Asia/Kolkata]")
public class MerchantImagesInner {

  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("imageFileWidth")
  private String imageFileWidth = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("imageResolution")
  private String imageResolution = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("promotionIds")
  private List<Integer> promotionIds = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("description")
  private String description = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("languages")
  private List<String> languages = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("imageFileSize")
  private String imageFileSize = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("logoAltTag")
  private String logoAltTag = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("promotionChannels")
  private List<String> promotionChannels = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("fileName")
  private String fileName = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("promotionChannel")
  private String promotionChannel = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("fileLocation")
  private String fileLocation = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("key")
  private Integer key = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("languageIds")
  private List<Integer> languageIds = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("imageFileHeight")
  private String imageFileHeight = null;
  
  
  @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
  @JsonProperty("promotionId")
  private Integer promotionId = null;
  
  public MerchantImagesInner imageFileWidth(String imageFileWidth) {
    this.imageFileWidth = imageFileWidth;
    return this;
  }

  
  /**
  * the pixel width of the image | Non-browser supported image (EPS, TIF) will return an empty String for this field.
  * @return imageFileWidth
  **/
  @ApiModelProperty(value = "the pixel width of the image | Non-browser supported image (EPS, TIF) will return an empty String for this field.")
  public String getImageFileWidth() {
    return imageFileWidth;
  }
  public void setImageFileWidth(String imageFileWidth) {
    this.imageFileWidth = imageFileWidth;
  }
  
  public MerchantImagesInner imageResolution(String imageResolution) {
    this.imageResolution = imageResolution;
    return this;
  }

  
  /**
  * a description provided for the image. Max length: 6 characters
  * @return imageResolution
  **/
  @ApiModelProperty(value = "a description provided for the image. Max length: 6 characters")
  public String getImageResolution() {
    return imageResolution;
  }
  public void setImageResolution(String imageResolution) {
    this.imageResolution = imageResolution;
  }
  
  public MerchantImagesInner promotionIds(List<Integer> promotionIds) {
    this.promotionIds = promotionIds;
    return this;
  }

  
  /**
  * returns all keys for the promotion channels associated with the image
  * @return promotionIds
  **/
  @ApiModelProperty(value = "returns all keys for the promotion channels associated with the image")
  public List<Integer> getPromotionIds() {
    return promotionIds;
  }
  public void setPromotionIds(List<Integer> promotionIds) {
    this.promotionIds = promotionIds;
  }
  
  public MerchantImagesInner description(String description) {
    this.description = description;
    return this;
  }

  
  /**
  * a description provided for the image. May return an empty String. Max length: 1024 characters
  * @return description
  **/
  @ApiModelProperty(value = "a description provided for the image. May return an empty String. Max length: 1024 characters")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  
  public MerchantImagesInner languages(List<String> languages) {
    this.languages = languages;
    return this;
  }

  
  /**
  * returns all languages associated with the logo
  * @return languages
  **/
  @ApiModelProperty(value = "returns all languages associated with the logo")
  public List<String> getLanguages() {
    return languages;
  }
  public void setLanguages(List<String> languages) {
    this.languages = languages;
  }
  
  public MerchantImagesInner imageFileSize(String imageFileSize) {
    this.imageFileSize = imageFileSize;
    return this;
  }

  
  /**
  * the size of the image file (in KB)
  * @return imageFileSize
  **/
  @ApiModelProperty(value = "the size of the image file (in KB)")
  public String getImageFileSize() {
    return imageFileSize;
  }
  public void setImageFileSize(String imageFileSize) {
    this.imageFileSize = imageFileSize;
  }
  
  public MerchantImagesInner logoAltTag(String logoAltTag) {
    this.logoAltTag = logoAltTag;
    return this;
  }

  
  /**
  * the alt tag for the image. May return an empty String
  * @return logoAltTag
  **/
  @ApiModelProperty(value = "the alt tag for the image. May return an empty String")
  public String getLogoAltTag() {
    return logoAltTag;
  }
  public void setLogoAltTag(String logoAltTag) {
    this.logoAltTag = logoAltTag;
  }
  
  public MerchantImagesInner promotionChannels(List<String> promotionChannels) {
    this.promotionChannels = promotionChannels;
    return this;
  }

  
  /**
  * returns all promotion channels associated with the image
  * @return promotionChannels
  **/
  @ApiModelProperty(value = "returns all promotion channels associated with the image")
  public List<String> getPromotionChannels() {
    return promotionChannels;
  }
  public void setPromotionChannels(List<String> promotionChannels) {
    this.promotionChannels = promotionChannels;
  }
  
  public MerchantImagesInner fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

  
  /**
  * name provided for the file. Max length: 50 characters
  * @return fileName
  **/
  @ApiModelProperty(value = "name provided for the file. Max length: 50 characters")
  public String getFileName() {
    return fileName;
  }
  public void setFileName(String fileName) {
    this.fileName = fileName;
  }
  
  public MerchantImagesInner promotionChannel(String promotionChannel) {
    this.promotionChannel = promotionChannel;
    return this;
  }

  
  /**
  * Deprecated; promotionChannels returns a complete list | Returns a single promotion channel associated with the image
  * @return promotionChannel
  **/
  @ApiModelProperty(value = "Deprecated; promotionChannels returns a complete list | Returns a single promotion channel associated with the image")
  public String getPromotionChannel() {
    return promotionChannel;
  }
  public void setPromotionChannel(String promotionChannel) {
    this.promotionChannel = promotionChannel;
  }
  
  public MerchantImagesInner fileLocation(String fileLocation) {
    this.fileLocation = fileLocation;
    return this;
  }

  
  /**
  * the external location for the merchant image file
  * @return fileLocation
  **/
  @ApiModelProperty(value = "the external location for the merchant image file")
  public String getFileLocation() {
    return fileLocation;
  }
  public void setFileLocation(String fileLocation) {
    this.fileLocation = fileLocation;
  }
  
  public MerchantImagesInner key(Integer key) {
    this.key = key;
    return this;
  }

  
  /**
  * an identifer for the key
  * @return key
  **/
  @ApiModelProperty(value = "an identifer for the key")
  public Integer getKey() {
    return key;
  }
  public void setKey(Integer key) {
    this.key = key;
  }
  
  public MerchantImagesInner languageIds(List<Integer> languageIds) {
    this.languageIds = languageIds;
    return this;
  }

  
  /**
  * returns all keys for the languages associated with the logo
  * @return languageIds
  **/
  @ApiModelProperty(value = "returns all keys for the languages associated with the logo")
  public List<Integer> getLanguageIds() {
    return languageIds;
  }
  public void setLanguageIds(List<Integer> languageIds) {
    this.languageIds = languageIds;
  }
  
  public MerchantImagesInner imageFileHeight(String imageFileHeight) {
    this.imageFileHeight = imageFileHeight;
    return this;
  }

  
  /**
  * the pixel height of the image | Non-browser supported image (EPS, TIF) will return an empty String for this field.
  * @return imageFileHeight
  **/
  @ApiModelProperty(value = "the pixel height of the image | Non-browser supported image (EPS, TIF) will return an empty String for this field.")
  public String getImageFileHeight() {
    return imageFileHeight;
  }
  public void setImageFileHeight(String imageFileHeight) {
    this.imageFileHeight = imageFileHeight;
  }
  
  public MerchantImagesInner promotionId(Integer promotionId) {
    this.promotionId = promotionId;
    return this;
  }

  
  /**
  * Deprecated; promotionIds returns a complete list | Returns a single key for the promotion channel associated with the image
  * @return promotionId
  **/
  @ApiModelProperty(value = "Deprecated; promotionIds returns a complete list | Returns a single key for the promotion channel associated with the image")
  public Integer getPromotionId() {
    return promotionId;
  }
  public void setPromotionId(Integer promotionId) {
    this.promotionId = promotionId;
  }
  
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MerchantImagesInner merchantImagesInner = (MerchantImagesInner) o;
    return Objects.equals(this.imageFileWidth, merchantImagesInner.imageFileWidth) &&
        Objects.equals(this.imageResolution, merchantImagesInner.imageResolution) &&
        Objects.equals(this.promotionIds, merchantImagesInner.promotionIds) &&
        Objects.equals(this.description, merchantImagesInner.description) &&
        Objects.equals(this.languages, merchantImagesInner.languages) &&
        Objects.equals(this.imageFileSize, merchantImagesInner.imageFileSize) &&
        Objects.equals(this.logoAltTag, merchantImagesInner.logoAltTag) &&
        Objects.equals(this.promotionChannels, merchantImagesInner.promotionChannels) &&
        Objects.equals(this.fileName, merchantImagesInner.fileName) &&
        Objects.equals(this.promotionChannel, merchantImagesInner.promotionChannel) &&
        Objects.equals(this.fileLocation, merchantImagesInner.fileLocation) &&
        Objects.equals(this.key, merchantImagesInner.key) &&
        Objects.equals(this.languageIds, merchantImagesInner.languageIds) &&
        Objects.equals(this.imageFileHeight, merchantImagesInner.imageFileHeight) &&
        Objects.equals(this.promotionId, merchantImagesInner.promotionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(imageFileWidth, imageResolution, promotionIds, description, languages, imageFileSize, logoAltTag, promotionChannels, fileName, promotionChannel, fileLocation, key, languageIds, imageFileHeight, promotionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MerchantImagesInner {\n");

    sb.append("    imageFileWidth: ").append(toIndentedString(imageFileWidth)).append("\n");
    sb.append("    imageResolution: ").append(toIndentedString(imageResolution)).append("\n");
    sb.append("    promotionIds: ").append(toIndentedString(promotionIds)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    imageFileSize: ").append(toIndentedString(imageFileSize)).append("\n");
    sb.append("    logoAltTag: ").append(toIndentedString(logoAltTag)).append("\n");
    sb.append("    promotionChannels: ").append(toIndentedString(promotionChannels)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    promotionChannel: ").append(toIndentedString(promotionChannel)).append("\n");
    sb.append("    fileLocation: ").append(toIndentedString(fileLocation)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    languageIds: ").append(toIndentedString(languageIds)).append("\n");
    sb.append("    imageFileHeight: ").append(toIndentedString(imageFileHeight)).append("\n");
    sb.append("    promotionId: ").append(toIndentedString(promotionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



